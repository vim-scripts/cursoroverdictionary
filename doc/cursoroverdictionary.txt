*cursoroverdictionary.txt*	英字辞書引きスクリプト

Last change: 2009 Jan 29
Version : 0.0.1
Copyright (C) 2009 ampmmn <http://d.hatena.ne.jp/ampmmn>

目次:
  これは何か................|cod-introduction|
  使い方....................|cod-usage|
  コマンド..................|cod-function|
  グローバル変数............|cod-variables|
  マッピング................|cod-mapping|
  CHANGELOG.................|cod-changelog|

==============================================================================
これは何か				*cod-introduction*

英辞郎データ(というか、PDIC1行形式辞書データ)を使って、
カーソル上にある単語を引くためのスクリプトです。

Firefoxの素敵なアドオン「Mouseover Dictionary」のアイデアをそのままVim上に
持ってきた、という代物です。
http://maru.bonyari.jp/mouseoverdictionary/

Mouseover Dictionaryはマウスオーバーした単語を表示する、というものですが、
このスクリプトでは、カーソル上にある単語を表示します。

できること
- カーソル上の単語を自動で表示
- ビジュアルモードで選択した単語・語句を調べる
- コマンドラインから指定した単語・語句を調べる

必要な環境・物:
- Vim 7.0以降
- +pythonオプション(sqlite3、またはsqliteパッケージが利用可能であること)
- 取り込むためのPDIC1行辞書データ
- HDD空き容量(環境により異なります。200MBくらいあると安心)

==============================================================================
使い方					*cod-usage*

1. 辞書データの登録
利用するには最初にPDIC1行形式の辞書ファイルを、このスクリプトが使用する
内部データベースに登録する必要があります。

PDIC1行形式辞書データファイルを用意し、
:CODRegistDict {辞書ファイルのパス} を実行してください。
CODRegistDictコマンドを実行すると、辞書データをデータベースファイルに
登録します。

英辞郎第三版の辞書ファイルを登録した場合、データベースファイルのサイズは約
170MByteほどになります。(Windows環境の場合)

データベースファイルは~/.cursoroverdictionary_dbに作成されます。
(g:CODDatabasePathで変更可能)

注意点として、登録するPDIC1行形式辞書ファイルの文字コードとVim内部の文字エン
コーディングが一致している必要があります。
一致していない場合、文字化けしたり登録時にエラーが起こったりします。

2. 出力ウインドウを表示する
辞書データの登録が完了すれば、利用可能な状態になります。
CODOpenコマンドを実行すると、訳文を表示するための出力ウインドウが表示されます。
あとは、カーソルを移動するだけで、カーソル上にある単語の訳文が出力ウインドウ上
に表示されます。

==============================================================================
コマンド				*cod-function*

:CODOpen 				*:CODOpen*
	出力ウインドウを表示します。
	出力ウインドウがすでに表示されている場合は何もしません。

:CODClose				*:CODClose*
	出力ウインドウを閉じます。出力ウインドウがない場合には何もしません。

:CODToggle				*:CODToggle*
	出力ウインドウが表示されている時にはウインドウを閉じ、
	そうでないときには出力ウインドウを表示します。

:CODRegistDict[!]  {file} 		*:CODRegistDict*
	PDIC1行形式辞書ファイル{file}を読み込み、内部データベースを作成します。
	!を指定すると、既存の内部データベースに重複するキーワードが存在する場
	合に上書きします。
	!を指定せず、キーワードの重複があった場合にはエラーとなります。
	
	なお、登録するPDIC1行形式辞書ファイルの文字コードは、Vim内部で使われるエンコー
	ディング(encodingオプションの値)と一致している必要があります。

:CODSelected				*:CODSelected*
	選択したテキストで辞書検索します。
	複数の単語を選択して実行することにより、語句を検索することができます。

:CODSearch [keyword]			*:CODSearch*
	[keyword]を辞書検索します。
	[keyword]を指定しなかった場合は、単語を入力するプロンプトが表示されま
	す。


==============================================================================
グローバル変数				*cod-variables*

g:CODDatabasePath			*g:CODDatabasePath*
	内部データベースのパスを指定します。
	既定値は ~/.cursoroverdictionary_db です。

g:CODDirection				*g:CODDirection*
	出力ウインドウに表示する方向です。
	既定値は:rightbelowです。

g:CODWindowHeight			*g:CODWindowHeight*
	出力ウインドウ表示時の高さ(垂直分割時は幅)です。
	既定値は10です。

g:CODAdditionalStemmingPatterns		*g:CODAdditionalStemmingPatterns*
	ステミングの際の、独自に置換するパターンを指定するためのリストです。
	単語が、このリストのパターンと一致した場合に、置換後の単語で辞書検索を
	行います。

	例えば、
	g:CODAdditionalStemmingPatterns = [ ['ies$', 'y'] ]
	と指定してある場合、「studies」という単語は「study」に変換されます。

	ここで指定するパターンは、Pythonでの正規表現形式である必要があります。
	(Vim形式ではないので注意)

==============================================================================
マッピング				*cod-mapping*

特にこのスクリプト側で設定しているマッピングはありません。

.vimrcで下記のように設定しておけば、選択した単語・語句を簡単に調べられるように
なって便利です。

	vnoremap <silent> {任意のキー} :<c-u>CODSelected<cr>

あとは、CODToggleコマンドをマップしておけば、簡単に出力ウインドウを表示/非表示
にすることができます。

	nnoremap <silent> {任意のキー} :CODToggle<cr>

==============================================================================
CHANGELOG				*cod-changelog*

	0.0.1		2009-01-28	1st release.
==============================================================================
vim:ts=8 sw=8 noexpandtab tw=78 ft=help:

